{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/base/base.module.ts","./src/app/base/breadcrumb/breadcrumb.component.ts","./src/app/base/breadcrumb/breadcrumb.component.html","./src/app/base/footer/footer.component.ts","./src/app/base/footer/footer.component.html","./src/app/base/navbar/navbar.component.ts","./src/app/base/navbar/navbar.component.html","./src/app/base/sidenav/SIDENAV_ITEMS.ts","./src/app/base/sidenav/sidenav.component.ts","./src/app/base/sidenav/sidenav.component.html","./src/app/base/sidenav/sidenav.service.ts","./src/app/base/theme-toggle-button/theme-toggle-button.component.ts","./src/app/base/theme-toggle-button/theme-toggle-button.component.html","./src/app/base/theme-toggle-button/theme.service.ts","./src/app/products/product.class.ts","./src/app/products/products-admin-table.conf.ts","./src/app/products/products-admin.component.ts","./src/app/products/products-admin.component.html","./src/app/products/products.component.ts","./src/app/products/products.component.html","./src/app/products/products.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/ui/animated-button/animated-button.component.ts","./src/app/shared/ui/animated-button/animated-button.component.html","./src/app/shared/ui/dynamic-form-control/dynamic-form-control.component.ts","./src/app/shared/ui/dynamic-form-control/dynamic-form-control.component.html","./src/app/shared/ui/dynamic-form/dynamic-form.component.ts","./src/app/shared/ui/dynamic-form/dynamic-form.component.html","./src/app/shared/ui/dynamic-form/dynamic-form.service.ts","./src/app/shared/ui/file-upload-input/file-upload-input.component.ts","./src/app/shared/ui/file-upload-input/file-upload-input.component.html","./src/app/shared/ui/info-icon/info-icon.component.ts","./src/app/shared/ui/info-icon/info-icon.component.html","./src/app/shared/ui/info-icon/tooltip.config.ts","./src/app/shared/ui/list/list.component.ts","./src/app/shared/ui/list/list.component.html","./src/app/shared/ui/list/list.service.ts","./src/app/shared/ui/list/search.model.ts","./src/app/shared/ui/table/base-table-loader.class.ts","./src/app/shared/ui/table/columns-management-dialog/columns-management-dialog.component.ts","./src/app/shared/ui/table/columns-management-dialog/columns-management-dialog.component.html","./src/app/shared/ui/table/edition-dialog/edition-dialog.component.ts","./src/app/shared/ui/table/edition-dialog/edition-dialog.component.html","./src/app/shared/ui/table/table-actions-cell/table-actions-cell.component.ts","./src/app/shared/ui/table/table-actions-cell/table-actions-cell.component.html","./src/app/shared/ui/table/table-filter-cell/table-filter-cell.component.ts","./src/app/shared/ui/table/table-filter-cell/table-filter-cell.component.html","./src/app/shared/ui/table/table-toolbar/table-toolbar.component.ts","./src/app/shared/ui/table/table-toolbar/table-toolbar.component.html","./src/app/shared/ui/table/table.component.ts","./src/app/shared/ui/table/table.component.html","./src/app/shared/utils/crud-item-options/control-type.model.ts","./src/app/shared/utils/crud-item-options/screen-width.model.ts","./src/app/shared/utils/crud-item-options/type.model.ts","./src/app/shared/utils/primeng/primeng.module.ts","./src/app/shared/utils/snackbar/snackbar.service.ts","./src/app/shared/utils/validators/form-error-messages.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductsAdminComponent } from './products/products-admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent\n  },\n  {\n    path: 'products',\n    component: ProductsComponent,\n    // loadChildren: () => import('./products/products.module').then(m => m.ProductsModule),\n    data: { name: 'Products', path: 'products' }\n  },\n  {\n    path: 'admin',\n    component: ProductsAdminComponent,\n    // loadChildren: () => import('./products/products.module').then(m => m.ProductsModule),\n    data: { name: 'Admin', path: 'admin' }\n  }\n  // { path: '**', redirectTo: 'not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\n\nexport class AppRoutingModule {}\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { SidenavService } from 'app/base/sidenav/sidenav.service';\n\nconst TRANSPARENT_NAV_PAGES = [ 'login' ];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\n  @HostBinding('class.transparent') transparent = false;\n\n  constructor(\n    private readonly router: Router,\n    private readonly sidenavService: SidenavService\n  ) {\n   \n  }\n\n  get getExpanded(): boolean {\n    return this.sidenavService.getExpanded();\n  }\n  get getPinned(): boolean {\n    return this.sidenavService.getPinned();\n  }\n\n  ngOnInit() {\n    \n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"app-container\"\n  [class.sidenav-expanded]=\"getExpanded\"\n  [class.sidenav-pinned]=\"getPinned\">\n  <app-sidenav></app-sidenav>\n  <div class=\"app-header\">\n    <app-breadcrumb></app-breadcrumb>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n\n<p-toast position=\"bottom-center\"></p-toast>\n<p-toast key=\"topRight\" position=\"top-right\"></p-toast>","import { registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport localeEn from '@angular/common/locales/en';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from 'app/app-routing.module';\nimport { AppComponent } from 'app/app.component';\nimport { BaseModule } from 'app/base/base.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ProductsComponent } from 'app/products/products.component';\nimport { ProductsAdminComponent } from 'app/products/products-admin.component';\n\n@NgModule({\n  declarations: [AppComponent, ProductsComponent, ProductsAdminComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    BaseModule\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'en' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor() {\n    registerLocaleData(localeEn, 'en');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { ThemeToggleButtonComponent } from 'app/base/theme-toggle-button/theme-toggle-button.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    FooterComponent,\n    SidenavComponent,\n    ThemeToggleButtonComponent,\n    BreadcrumbComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  exports: [NavbarComponent, FooterComponent, SidenavComponent, BreadcrumbComponent]\n})\nexport class BaseModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { SidenavItem } from 'app/base/sidenav/sidenav.model';\nimport { SidenavService } from 'app/base/sidenav/sidenav.service';\nimport { SIDENAV_ITEMS } from 'app/base/sidenav/SIDENAV_ITEMS';\nimport { MenuItem } from 'primeng/api';\nimport { filter, map, startWith, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  @Input() public lang = 'en';\n  public items: MenuItem[] = [];\n  private readonly sidenavItems: SidenavItem[] = SIDENAV_ITEMS;\n  private homeItem: MenuItem = { label: 'Home', routerLink: '/' };\n\n  constructor(\n    private readonly sidenavService: SidenavService,\n    private readonly router: Router,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.router.events.pipe(      \n      filter(event => event instanceof NavigationEnd),\n      map((event: NavigationEnd) => event.url),\n      startWith(this.router.url),\n      tap(() => this.items = [this.homeItem])\n    ).subscribe((url) => {\n      this.buildBreadcrumb(url);\n    });\n  }\n\n  private buildBreadcrumb(path: string): void {\n    const firstPath: SidenavItem = this.sidenavItems.find(item => '/' + item.id === path);\n    if (firstPath) {\n      this.items.push({\n        label: firstPath.labels[this.lang],\n        routerLink: firstPath.link,\n        command: () => this.sidenavService.setCurrentEntityName('')\n      });\n    }\n  }\n\n}","<p-breadcrumb [model]=\"items\"></p-breadcrumb>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent {\r\n  constructor() {}\r\n}\r\n","<footer>\n  &copy; 2023 Alten Shop\n</footer>\n","import { Component, Input } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n\n  @Input() isAuthenticated = false;\n\n  public userName: string;\n  public userMenuItems: MenuItem[] = [\n    { label: 'Profile', icon: 'pi pi-fw pi-cog', routerLink: '/user/profile' },\n    { label: 'Messages', icon: 'pi pi-fw pi-envelope', routerLink: '/user/messages' },\n    { label: 'Notifications', icon: 'pi pi-fw pi-bell', routerLink: '/user/notifications' },\n    { label: 'Logout', icon: 'pi pi-fw pi-power-off', command: null },\n  ];\n\n  constructor(\n\n  ) {}\n\n\n}\n","<div class=\"navbar\">\n  <div class=\"actions\">\n    <!-- Switch mode -->\n    <app-theme-toggle-button></app-theme-toggle-button>\n\n    <!-- Admin -->\n    <div class=\"user-button\">\n      <span>John Doe</span>\n      <button pButton icon=\"pi pi-user\" type=\"button\" class=\"p-button-rounded p-button-outlined\"></button>\n    </div>\n  </div>\n\n</div>","import { SidenavItem } from \"app/base/sidenav/sidenav.model\";\n\nexport const SIDENAV_ITEMS: SidenavItem[] = [\n  {\n    id: 'products',\n    labels: {\n      en: \"Products\",\n      fr: \"Produits\"\n    },\n    link: '/products',\n    icon: 'shopping-cart',\n  },\n  {\n    id: 'admin',\n    labels: {\n      en: \"Admin\",\n      fr: \"Admin\"\n    },\n    icon: 'users',\n    link: '/admin',\n    children: [\n      {\n        id: 'products',\n        labels: {\n          en: \"Products\",\n          fr: \"Produits\"\n        },\n        link: 'products',\n        enrichedUrl: () => 'admin/products'\n      }\n    ]\n  }\n\n];","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SidenavItem } from 'app/base/sidenav/sidenav.model';\nimport { SidenavService } from 'app/base/sidenav/sidenav.service';\nimport { SIDENAV_ITEMS } from 'app/base/sidenav/SIDENAV_ITEMS';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n  @Input() public lang = 'en';\n  @Output() public hovered: EventEmitter<boolean> = new EventEmitter();\n\n  public sidenavItems: SidenavItem[] = SIDENAV_ITEMS.filter(item => !item.hidden);\n\n  public Object = Object;\n\n  constructor(\n    public readonly sidenavService: SidenavService,\n    private readonly router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  public onMouseover(hovering: boolean): void {\n    this.sidenavService.setExpanded(hovering);\n  }\n\n  public onSidenavItemClick(item: SidenavItem, event: Event): void {\n    event.preventDefault();\n    if (this.sidenavService.getMobileDisplay() && !this.sidenavService.getExpanded()) {\n      this.sidenavService.setExpanded(true);\n    } else {\n      this.navigate(item);\n      this.sidenavService.setCurrentEntityName('');\n    }\n  }\n\n  private navigate(item: SidenavItem): void {\n    this.router.navigate([item.link]);\n  }\n}\n","<div class=\"sidenav\" [class.expanded]=\"sidenavService.getExpanded()\"\n    (mouseover)=\"sidenavService.setExpanded(true)\"\n    (mouseleave)=\"sidenavService.setExpanded(false)\"> \n    <i class=\"pi pi-bookmark pinned-icon\"\n        *ngIf=\"!sidenavService.getMobileDisplay()\"\n        [class.active]=\"sidenavService.getPinned()\"\n        (click)=\"sidenavService.togglePinned()\"\n        data-expanded-only>\n    </i>\n    <div class=\"title-container\" [routerLink]=\"'/'\">\n        <img src=\"favicon.ico\" height=\"25\">\n        <div class=\"title\"data-expanded-only>\n            <span class=\"first\">Alten Shop</span>\n        </div>\n    </div>   \n    <ul>\n        <li *ngFor=\"let item of sidenavItems\" [class.router-link-active]=\"rla.isActive\">\n            <div class=\"li-container\"\n                (click)=\"onSidenavItemClick(item, $event)\"\n                [routerLink]=\"item.link\"\n                [routerLinkActiveOptions]=\"item.link === '/' ? {exact: true} : {exact: false}\"\n                routerLinkActive\n                #rla=\"routerLinkActive\">\n                <i class=\"pi pi-{{item.icon}} menu-icon\"></i>\n                <span class=\"menu-title\" data-expanded-only>{{ item.labels[lang] }}</span>\n            </div>\n        </li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SidenavService {\n\n    private _expanded = true;\n    private _pinned = true;\n    private _isMobileDisplay = false;\n\n    public currentEntityName$: BehaviorSubject<string> = new BehaviorSubject('');\n    public currentChildEntityName$: BehaviorSubject<string> = new BehaviorSubject('');\n\n    constructor(\n    ) {\n        const screenWidth = window.innerWidth;\n        if (screenWidth <= 768) {\n            this._pinned = false;\n            this._expanded = false;\n            this._isMobileDisplay = true;\n        }\n    }\n\n    public getExpanded(): boolean {\n        return this._expanded || this._pinned;\n        // return !this._isMobileDisplay && (this._expanded || this._pinned);\n    }\n\n    public getPinned(): boolean {\n        return this._pinned;\n    }\n\n    public getMobileDisplay(): boolean {\n        return this._isMobileDisplay;\n    }\n\n    public toggleExpanded(): void {\n        this._expanded = !this._expanded;\n    }\n\n    public setExpanded(expanded: boolean): void {\n        this._expanded = expanded;\n    }\n    \n    public togglePinned(): void {\n        this._pinned = !this._pinned;\n    }\n\n    public setCurrentEntityName(name: string): void {\n        this.currentEntityName$.next(name);\n    }\n\n    public setCurrentChildEntityName(name: string): void {\n        this.currentChildEntityName$.next(name);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ThemeService } from 'app/base/theme-toggle-button/theme.service';\r\n\r\n@Component({\r\n  selector: 'app-theme-toggle-button',\r\n  templateUrl: './theme-toggle-button.component.html',\r\n  styleUrls: ['./theme-toggle-button.component.scss'],\r\n  providers: [ThemeService]\r\n})\r\nexport class ThemeToggleButtonComponent implements OnInit {\r\n  public darkMode: boolean;\r\n\r\n  constructor(\r\n    private readonly themeService: ThemeService\r\n  ) { }\r\n\r\n  ngOnInit(): void {    // Set theme\r\n    const storedTheme = localStorage.getItem('DWTheme');\r\n    const theme: 'dark' | 'light' = storedTheme !== 'dark' && storedTheme !== 'light' ? 'light' : storedTheme;\r\n    this.darkMode = theme === 'dark';\r\n    this.setTheme(theme);\r\n  }\r\n\r\n  public toggleMode(): void {\r\n    this.darkMode = !this.darkMode;\r\n    const themeAttribute = this.darkMode ? 'dark' : 'light';\r\n    this.setTheme(themeAttribute);\r\n  }\r\n\r\n  private setTheme(theme: 'dark' | 'light'): void {\r\n    const documentTheme = document.documentElement.getAttribute('data-dark-mode');\r\n    if (documentTheme !== theme) {\r\n      document.documentElement.setAttribute('data-dark-mode', theme);\r\n      this.themeService.switchTheme(theme);\r\n      localStorage.setItem('DWTheme', theme);\r\n    }\r\n  }\r\n}\r\n","<div class=\"switch-mode-container\" title=\"Switch mode\" (click)=\"toggleMode()\">\r\n    <input type=\"checkbox\" class=\"checkbox\" [checked]=\"darkMode\"/>\r\n    <label for=\"toggle\" class=\"switch\"></label>\r\n  </div>","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ThemeService {\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n  ) { }\r\n\r\n  public switchTheme(theme: 'dark' | 'light') {\r\n    const themeLink = this.document.getElementById('app-theme') as HTMLLinkElement;\r\n\r\n    if (themeLink) {\r\n      themeLink.href = `mdc-${theme}-deeppurple.css`;\r\n    }\r\n  }\r\n}\r\n","export class Product {\n  id?:number;\n  code?:string;\n  name?:string;\n  description?:string;\n  price?:number;\n  quantity?:number;\n  inventoryStatus?:string;\n  category?:string;\n  image?:string;\n  rating?:number;\n}\n\nexport interface ProductPayload {\n  products: Product[];\n  total: number;\n}","import { ScreenWidth } from 'app/shared/utils/crud-item-options/screen-width.model';\nimport { CrudItemOptions } from 'app/shared/utils/crud-item-options/crud-item-options.model';\nimport { ControlType } from 'app/shared/utils/crud-item-options/control-type.model';\nimport { TypeInput } from 'app/shared/utils/crud-item-options/type.model';\n\n\nexport const PRODUCT_TABLE_CONF: CrudItemOptions[] = [\n  {\n    key: 'id',\n    controlType: ControlType.INPUT,\n    type: TypeInput.TEXT,\n    label: 'ID',\n    columnOptions: {\n      minScreenSize: ScreenWidth.large,\n      hidden: true\n    },\n    controlOptions: {      \n      hideOnCreate: false,\n      hideOnUpdate: false,\n      disableOnCreate: true,\n      disableOnUpdate: true\n    }\n  },\n  {\n    key: 'code',\n    controlType: ControlType.INPUT,\n    type: TypeInput.TEXT,\n    label: 'code',\n    columnOptions: {\n      minScreenSize: ScreenWidth.small,\n      default: true\n    },\n  },\n  {\n    key: 'name',\n    controlType: ControlType.INPUT,\n    type: TypeInput.TEXT,\n    label: 'name',\n    columnOptions: {\n      minScreenSize: ScreenWidth.small,\n      default: true\n    },\n  },\n  {\n    key: 'description',\n    controlType: ControlType.INPUT,\n    type: TypeInput.TEXT,\n    label: 'description',\n    columnOptions: {\n      minScreenSize: ScreenWidth.large,\n    },\n  },\n  {\n    key: 'category',\n    controlType: ControlType.SELECT,\n    label: 'category',\n    options: [{value: \"Accessories\",label: \"Accessories\" },\n    {value: \"Clothing\",label: \"Clothing\" },\n    {value: \"Electronics\",label: \"Electronics\" },\n    {value: \"Fitness\",label: \"Fitness\" }],\n\n    columnOptions: {\n      minScreenSize: ScreenWidth.small,\n    }\n  },\n  {\n    key: 'inventoryStatus',\n    controlType: ControlType.SELECT,\n    label: 'inventoryStatus',\n    options: [{value: \"INSTOCK\",label: \"INSTOCK\" },\n    {value:\"LOWSTOCK\",label: \"LOWSTOCK\" }, \n    {value: \"OUTOFSTOCK\",label: \"OUTOFSTOCK\"}],\n    columnOptions: {\n      minScreenSize: ScreenWidth.small,\n    }\n  },\n  {\n    key: 'price',\n    controlType: ControlType.INPUT,\n    type: TypeInput.NUMBER,\n    label: 'price',\n    columnOptions: {\n      minScreenSize: ScreenWidth.small,\n    },\n  },\n  {\n    key: 'quantity',\n    controlType: ControlType.INPUT,\n    type: TypeInput.NUMBER,\n    label: 'Quantity',\n    columnOptions: {\n      minScreenSize: ScreenWidth.small,\n    },\n    controlOptions: {\n    }\n  }\n\n]; ","import { Component, OnInit } from '@angular/core';\nimport { Product, ProductPayload } from './product.class';\nimport {PRODUCT_TABLE_CONF} from './products-admin-table.conf';\nimport { ProductsService } from './products.service';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { BaseTableLoader } from 'app/shared/ui/table/base-table-loader.class';\n\nimport { CrudItemOptions } from 'app/shared/utils/crud-item-options/crud-item-options.model';\n\n@Component({\n  selector: 'app-products-admin',\n  templateUrl: './products-admin.component.html',\n  styleUrls: ['./products-admin.component.scss']\n})\nexport class ProductsAdminComponent extends BaseTableLoader implements OnInit {\n\n  public payload$: BehaviorSubject<ProductPayload> = new BehaviorSubject<ProductPayload>({products:[],total:0});\n  public conf: CrudItemOptions[] = PRODUCT_TABLE_CONF;\n  public entity = Product;\n\n  constructor(\n    private readonly productsService: ProductsService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    // Display data table\n    this.productsService.getProducts().subscribe(products => \n    {\n      this.payload$.next({products: products, total: products.length})\n    });\n\n  }\n\n  public onDeleteProduct(ids: number[]): void {\n    this.delete(ids[0]);\n  }\n\n  public onSave(product: Product): void {\n    product.id ? this.update(product) : this.create(product);\n  }\n\n  private create(product: Product): void {\n    this.handleReload(this.productsService.create(product));\n  }\n\n  private update(product: Product): void {\n    this.handleReload(this.productsService.update(product));\n  }\n\n  private delete(id: number): void {\n    this.handleReload(this.productsService.delete(id));\n  }\n}\n","<div class=\"app-frame\" *ngIf=\"payload$ | async as pl\">\n  <app-table \n    class=\"table\"\n    [data]=\"pl.products\"\n    [totalRecords]=\"pl.total\"\n    [config]=\"conf\"\n    [entity]=\"entity\"\n    [selectable]=\"true\"\n    (saved)=\"onSave($event)\"\n    (deleted)=\"onDeleteProduct($event)\"\n    [multiSelect]=\"false\"\n    [lazy]=\"false\"\n    (lazyLoaded)=\"loadData($event)\">\n  </app-table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PrimeNGConfig, SelectItem } from 'primeng/api';\nimport { Product } from './product.class';\nimport { ProductsService } from './products.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  products: Product[] = [];\n  sortOptions: SelectItem[];\n  sortOrder: number;\n  sortField: string;\n\n  constructor(\n    private productsService: ProductsService,\n    private primengConfig: PrimeNGConfig\n  ) { }\n\n  ngOnInit(): void {\n    this.productsService.getProducts().subscribe(data => {\n      this.products = data\n    });\n\n    this.sortOptions = [\n      { label: 'Price High to Low', value: '!price' },\n      { label: 'Price Low to High', value: 'price' }\n    ];\n\n    this.primengConfig.ripple = true;\n  }\n\n  onSortChange(event) {\n    let value = event.value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    }\n    else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n}\n","<div class=\"app-frame\">\n\n\t<div class=\"card\">\n\t\t<app-list [items]=\"products\"\n\t\t\t[listItemTemplate]=\"listItemTemplate\"\n\t\t\t[gridItemTemplate]=\"gridItemTemplate\">\n\t\t</app-list>\n\t</div>\n\n\t<ng-template #listItemTemplate let-item>\n\t\t<div class=\"product-list-detail\">\n\t\t\t<div class=\"product-name\">{{item.name}}</div>\n\t\t\t<div class=\"product-description\">{{item.description}}</div>\n\t\t\t<p-rating [ngModel]=\"item.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\n\t\t\t<i class=\"pi pi-tag product-category-icon\"></i><span class=\"product-category\">{{item.category}}</span>\n\t\t</div>\n\t\t<div class=\"product-list-action\">\n\t\t\t<span class=\"product-price\">${{item.price}}</span>\n\t\t\t<p-button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" [disabled]=\"item.inventoryStatus === 'OUTOFSTOCK'\">\n\t\t\t</p-button>\n\t\t\t<span [class]=\"'product-badge status-' + item.inventoryStatus.toLowerCase()\">{{item.inventoryStatus}}</span>\n\t\t</div>\n\t</ng-template>\n\n\t<ng-template #gridItemTemplate let-item>\n\t\t<div class=\"product-grid-item-top\">\n\t\t\t<div>\n\t\t\t\t<i class=\"pi pi-tag product-category-icon\"></i>\n\t\t\t\t<span class=\"product-category\">{{item.category}}</span>\n\t\t\t</div>\n\t\t\t<span\n\t\t\t\t[class]=\"'product-badge status-' + item.inventoryStatus.toLowerCase()\">{{item.inventoryStatus}}</span>\n\t\t</div>\n\t\t<div class=\"product-grid-item-content\">\n\t\t\t<div class=\"product-name\">{{item.name}}</div>\n\t\t\t<div class=\"product-description\">{{item.description}}</div>\n\t\t\t<p-rating [ngModel]=\"item.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\n\t\t</div>\n\t\t<div class=\"product-grid-item-bottom\">\n\t\t\t<span class=\"product-price\">${{item.price}}</span>\n\t\t\t<p-button icon=\"pi pi-shopping-cart\" [disabled]=\"item.inventoryStatus === 'OUTOFSTOCK'\"></p-button>\n\t\t</div>\n\t</ng-template>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Product } from './product.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n    private static productslist: Product[] = null;\n    private products$: BehaviorSubject<Product[]> = new BehaviorSubject<Product[]>([]);\n\n    constructor(private http: HttpClient) { }\n\n    getProducts(): Observable<Product[]> {\n        if( ! ProductsService.productslist )\n        {\n            this.http.get<any>('assets/products.json').subscribe(data => {\n                ProductsService.productslist = data.data;\n                \n                this.products$.next(ProductsService.productslist);\n            });\n        }\n        else\n        {\n            this.products$.next(ProductsService.productslist);\n        }\n\n        return this.products$;\n    }\n\n    create(prod: Product): Observable<Product[]> {\n\n        ProductsService.productslist.push(prod);\n        this.products$.next(ProductsService.productslist);\n        \n        return this.products$;\n    }\n\n    update(prod: Product): Observable<Product[]>{\n        ProductsService.productslist.forEach(element => {\n            if(element.id == prod.id)\n            {\n                element.name = prod.name;\n                element.category = prod.category;\n                element.code = prod.code;\n                element.description = prod.description;\n                element.image = prod.image;\n                element.inventoryStatus = prod.inventoryStatus;\n                element.price = prod.price;\n                element.quantity = prod.quantity;\n                element.rating = prod.rating;\n            }\n        });\n        this.products$.next(ProductsService.productslist);\n\n        return this.products$;\n    }\n\n\n    delete(id: number): Observable<Product[]>{\n        ProductsService.productslist = ProductsService.productslist.filter(value => { return value.id !== id } );\n        this.products$.next(ProductsService.productslist);\n        return this.products$;\n    }\n}","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PrimeNGModule } from './utils/primeng/primeng.module';\nimport { AnimatedButtonComponent } from './ui/animated-button/animated-button.component';\nimport { DynamicFormService } from './ui/dynamic-form/dynamic-form.service';\nimport { DynamicFormComponent } from './ui/dynamic-form/dynamic-form.component';\nimport { FileUploadInputComponent } from './ui/file-upload-input/file-upload-input.component';\nimport { InfoIconComponent } from './ui/info-icon/info-icon.component';\nimport { ListComponent } from './ui/list/list.component';\nimport { ListService } from './ui/list/list.service';\nimport { ColumnsManagementDialogComponent } from './ui/table/columns-management-dialog/columns-management-dialog.component';\nimport { EditionDialogComponent } from './ui/table/edition-dialog/edition-dialog.component';\nimport { TableComponent } from './ui/table/table.component';\nimport { DynamicFormControlComponent } from './ui/dynamic-form-control/dynamic-form-control.component';\nimport { TableToolbarComponent } from './ui/table/table-toolbar/table-toolbar.component';\nimport { TableFilterCellComponent } from './ui/table/table-filter-cell/table-filter-cell.component';\nimport { TableActionsCellComponent } from './ui/table/table-actions-cell/table-actions-cell.component';\n\n@NgModule({\n  declarations: [\n    InfoIconComponent,\n\n    AnimatedButtonComponent,\n    ListComponent,\n    FileUploadInputComponent,\n    DynamicFormComponent,\n    TableComponent,\n    EditionDialogComponent,\n    ColumnsManagementDialogComponent,\n    DynamicFormControlComponent,\n    TableToolbarComponent,\n    TableFilterCellComponent,\n    TableActionsCellComponent\n  ],\n  providers: [\n    DynamicFormService,\n    ListService\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    PrimeNGModule,\n  ],\n  exports: [\n    CommonModule,\n    InfoIconComponent,\n    AnimatedButtonComponent,\n    ListComponent,\n    ReactiveFormsModule,\n    FormsModule,\n    FileUploadInputComponent,\n    PrimeNGModule,\n    DynamicFormComponent,\n    TableComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\nexport type ButtonState = 'default' | 'isLoading' | 'isDone' | 'isEnabled';\nexport interface ButtonConfig {\n  defaultLabel: string;\n  defaultIcon: string;\n  loadingLabel: string;\n  doneLabel: string;\n  hideLabel?: boolean;\n  checkIcon?: string;\n  backgroundColor?: string;\n}\nconst defaultConfig: ButtonConfig = {\n  defaultLabel: 'Save',\n  defaultIcon: 'save',\n  loadingLabel: 'Saving...',\n  doneLabel: 'Saved',\n  hideLabel: false,\n  checkIcon: 'check'\n};\n\n@Component({\n  selector: 'app-animated-button',\n  templateUrl: './animated-button.component.html',\n  styleUrls: ['./animated-button.component.scss']\n})\nexport class AnimatedButtonComponent {\n\n  @Input() state: ButtonState = 'default';\n  @Input() config: ButtonConfig = defaultConfig;\n  @Input() width = 'auto';\n  @Output() clicked: EventEmitter<null> = new EventEmitter();\n\n  constructor() { }\n\n  public onClick() {\n    this.clicked.emit();\n  }\n\n}\n","<button pButton\n  pRipple\n  [title]=\"state === 'isDone' ? config.doneLabel : (state === 'isLoading' ? config.loadingLabel : config.defaultLabel)\"\n  [icon]=\"'pi pi-' + (state === 'isDone' ? (config.checkIcon ? config.checkIcon : 'check') : (state === 'isLoading' ? 'sync pi-spin' : config.defaultIcon))\"\n  [label]=\"config.hideLabel ? '' : state === 'isDone' ? config.doneLabel : (state === 'isLoading' ? config.loadingLabel : config.defaultLabel)\"\n  [disabled]=\"state !== 'isEnabled'\"\n  [style.width]=\"width\"\n  [ngClass]=\"config.backgroundColor ? ('p-button-' + config.backgroundColor) : ''\"\n  (click)=\"onClick()\">\n</button>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { CrudItemOptions } from 'app/shared/utils/crud-item-options/crud-item-options.model';\nimport { ControlOptions } from 'app/shared/utils/crud-item-options/control-options.model';\nimport { FORM_ERROR_MESSAGES } from 'app/shared/utils/validators/form-error-messages';\nimport { SelectItem } from 'primeng/api';\nimport { debounceTime, Observable, of, Subject } from 'rxjs';\nimport { ControlType } from 'app/shared/utils/crud-item-options/control-type.model';\n\n@Component({\n  selector: 'app-dynamic-form-control',\n  templateUrl: './dynamic-form-control.component.html',\n  styleUrls: ['./dynamic-form-control.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicFormControlComponent<T> {\n\n  @Input() controlConfig: CrudItemOptions;\n  @Input() creation = false;\n  @Input() formCtrl: FormControl;\n  @Output() tableControlClicked: EventEmitter<CrudItemOptions> = new EventEmitter();\n  @Output() childControlChanged: EventEmitter<T> = new EventEmitter();\n  @Output() valuePreset: EventEmitter<{ ctrl: string; value: unknown }> = new EventEmitter();\n\n  public ControlType = ControlType;\n\n  public autocompleteSuggestions$: Observable<SelectItem[]> = of([]);\n  private autocompleteValidity$: Subject<void> = new Subject();\n\n  get controlOptions(): ControlOptions {\n    return this.controlConfig.controlOptions || {};\n  }\n\n  get controlUnavailable(): boolean {\n    return (this.creation && this.controlOptions.disableOnCreate) ||\n      (!this.creation && this.controlOptions.disableOnUpdate)\n  }\n\n  get controlVisible(): boolean {\n    return (this.creation && !this.controlOptions.hideOnCreate) ||\n      (!this.creation && !this.controlOptions.hideOnUpdate);\n  }\n\n  get isRequired(): boolean {\n    return this.formCtrl.hasValidator(Validators.required);\n  }\n\n  get error(): string {\n    const errorKeys = Object.keys(this.formCtrl.errors);\n    if (!errorKeys.length) return '';\n    const firstError = errorKeys[0];\n    return FORM_ERROR_MESSAGES[firstError] ?? FORM_ERROR_MESSAGES['*'];\n  }\n\n  constructor() {\n    this.autocompleteValidity$.pipe(\n      debounceTime(200),\n    ).subscribe(() => {\n      // Set validitity to false while user does not select a suggested value\n      this.formCtrl.setErrors({ unknownValue: true });\n    });\n  }\n\n  public onTableDisplay(control: CrudItemOptions) {\n    this.tableControlClicked.emit(control);\n  }\n\n  public getChildControl(control: CrudItemOptions, childKey: unknown): CrudItemOptions {\n    const childControl = control.children.find(child => child.key === childKey || child.key === 'noKey');\n    return {\n      ...childControl,\n      key: childControl.key === 'noKey' ? childKey as string : childControl.key,\n      // options\n    };\n  }\n\n  public updateChildControlValue(event: { value: T }) {\n    this.childControlChanged.emit(event.value);\n  }\n\n  public onAutocomplete(event: string): void {\n    this.autocompleteSuggestions$ = this.controlOptions.searchOptionsFn(event);\n  }\n\n  public onAutocompleteKeyUp() {\n    this.autocompleteValidity$.next();\n  }\n\n  public onSelect(event: SelectItem): void {\n    this.formCtrl.setValue(event.label);\n    // Set validity to true\n    this.formCtrl.updateValueAndValidity();\n    const presetValue: {ctrl: string; value: unknown } = this.controlOptions.onSelect(event);\n    this.valuePreset.emit(presetValue);\n  }\n}\n","<ng-container *ngIf=\"controlVisible\">\n<div [ngSwitch]=\"controlConfig.controlType\"\n  class=\"form-control-container\"\n  [class.unavailable]=\"controlUnavailable\">\n    <ng-container *ngSwitchCase=\"ControlType.INPUT\">\n      <span class=\"p-float-label\">\n        <input *ngIf=\"controlConfig.type === 'text'\" type=\"text\" pInputText [formControl]=\"formCtrl\"> \n        <p-inputNumber *ngIf=\"controlConfig.type === 'number'\" [formControl]=\"formCtrl\"></p-inputNumber>\n        <p-calendar *ngIf=\"controlConfig.type === 'date'\" [formControl]=\"formCtrl\"></p-calendar>\n        <label [class.mandatory-control]=\"isRequired\" [for]=\"controlConfig.key\">{{ controlConfig.label }}</label>\n      </span>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"ControlType.DATE\">\n      <span class=\"p-float-label\">\n        <p-calendar [formControl]=\"formCtrl\"></p-calendar>\n        <label [class.mandatory-control]=\"isRequired\" [for]=\"controlConfig.key\">{{ controlConfig.label }}</label>\n      </span>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"ControlType.SELECT\">\n      <label *ngIf=\"controlConfig.label\" [class.mandatory-control]=\"isRequired\"\n        [for]=\"controlConfig.key\" style=\"width: 75px; display: inline-block;\">\n        {{ controlConfig.label }}\n      </label>\n      <p-dropdown [formControl]=\"formCtrl\"\n        [options]=\"controlConfig.options\"\n        optionLabel=\"label\"\n        optionValue=\"value\">\n      </p-dropdown>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"ControlType.MULTISELECT\">\n      <label *ngIf=\"controlConfig.label\" [class.mandatory-control]=\"isRequired\"\n        [for]=\"controlConfig.key\" style=\"width: 75px; display: inline-block;\">\n        {{ controlConfig.label }}\n      </label>\n      <p-multiSelect\n        [options]=\"controlConfig.options\"\n        [formControl]=\"formCtrl\"\n        defaultLabel=\"Select a value\">\n    </p-multiSelect>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"ControlType.AUTOCOMPLETE\">\n      <span class=\"p-float-label\">\n        <p-autoComplete \n          [formControl]=\"formCtrl\"\n          [virtualScroll]=\"true\"\n          [suggestions]=\"autocompleteSuggestions$ | async\"\n          [virtualScrollItemSize]=\"34\"\n          [minLength]=\"2\"\n          (completeMethod)=\"onAutocomplete($event.query)\"\n          (onKeyUp)=\"onAutocompleteKeyUp()\"\n          (onSelect)=\"onSelect($event)\"\n          [dropdown]=\"false\"\n          scrollHeight=\"200px\"\n          emptyMessage=\"No results\"\n          [showEmptyMessage]=\"true\">\n          <ng-template let-suggestion pTemplate=\"item\">\n            <span>{{suggestion.label}} ({{suggestion.value}})</span>\n          </ng-template>\n        </p-autoComplete>\n        <label [for]=\"controlConfig.key\" [class.mandatory-control]=\"isRequired\">{{ controlConfig.label }}</label>\n      </span>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"ControlType.CHECKBOX\">\n      <p-checkbox [formControl]=\"formCtrl\" [label]=\"controlConfig.label\" [binary]=\"true\" class=\"checkbox-input\"></p-checkbox>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"ControlType.LIST\">\n      <div class=\"form-control-container\">\n        <span class=\"label\" [class.mandatory-control]=\"isRequired\">{{ controlConfig.label}}</span>\n        <div class=\"listbox\">\n          <div class=\"option\" *ngFor=\"let val of controlConfig.value | keyvalue\">\n            <app-dynamic-form\n              [controls]=\"[getChildControl(controlConfig, val.key)]\"\n              [values]=\"controlConfig.value\"\n              (formChanged)=\"updateChildControlValue($event)\">\n            </app-dynamic-form>\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n\n  <ng-container *ngSwitchCase=\"ControlType.TABLE\">\n      <div class=\"form-control-container\">\n        <span class=\"label\" [class.mandatory-control]=\"isRequired\">{{ controlConfig.label }}</span>\n        <div class=\"listbox table-value\">\n          {{ controlConfig.value.length }}\n          <button pButton\n            pRipple\n            icon=\"pi pi-pencil\"\n            class=\"p-button-sm p-button-rounded p-button-text\"\n            (click)=\"onTableDisplay(controlConfig)\">\n          </button>\n        </div>\n      </div>       \n    </ng-container> \n  </div>\n  \n  <small class=\"p-error\" *ngIf=\"formCtrl.invalid && formCtrl.touched\">\n    {{ error }}\n  </small>\n</ng-container>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CrudItemOptions } from 'app/shared/utils/crud-item-options/crud-item-options.model';\nimport { debounceTime } from 'rxjs/operators';\nimport { DynamicFormService } from './dynamic-form.service';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss'],\n})\nexport class DynamicFormComponent<T> implements OnInit {\n  @Input() controls: CrudItemOptions[] = [];\n  @Input() values: any;\n  @Input() creation: boolean;\n  @Output() formChanged: EventEmitter<{ value: T; valid?: boolean }> = new EventEmitter();\n  @Output() tableControlClicked: EventEmitter<CrudItemOptions> = new EventEmitter();\n\n  public controlsWithValues: CrudItemOptions[];\n  public form: FormGroup;\n\n  constructor(\n    private readonly dynamicFormService: DynamicFormService,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.assignValues();\n    this.form = this.dynamicFormService.toFormGroup(this.controlsWithValues || []);\n\n    this.form.valueChanges.pipe(\n      debounceTime(300),\n    ).subscribe(formValue => {\n      // Must convert date values from Date to number...\n      const dateCtrls = this.controlsWithValues.filter(control => control.controlType === 'date') || [];\n      dateCtrls.forEach((ctrl) => {\n        if (formValue[ctrl.key]) {\n          formValue[ctrl.key] = new Date(formValue[ctrl.key]).getTime();\n        }\n      });\n      // Emit changes\n      this.formChanged.emit({ value: formValue, valid: this.form.valid });\n    });\n  }\n\n  public updateControl(event: { ctrl: string; value: unknown }) {\n    this.form.get(event.ctrl).setValue(event.value);\n  }\n\n  public onTableDisplay(control: CrudItemOptions) {\n    this.tableControlClicked.emit(control);\n  }\n\n  public updateChildControlValue(value: T, control: CrudItemOptions) {\n    const rootProp = control.key;\n    const newValues = { ...this.values[rootProp], ...value };\n    let newProp = { [rootProp]: newValues };\n    if (control.controlType === 'list' && this.values[rootProp].length !== undefined) {\n      newProp = { [rootProp]: Object.values(newValues) };\n    }\n    this.values = { ...this.values, ...newProp };\n    this.formChanged.emit({ value: this.values });\n  }\n\n  private assignValues(): void {\n    this.controlsWithValues = this.controls.map(control => ({\n      ...control,\n      value: this.values[control.key]\n    }));\n  }\n}\n","<div *ngIf=\"form\" [formGroup]=\"form\" class=\"form-container\">\n  <ng-container *ngFor=\"let control of controlsWithValues\">\n    <app-dynamic-form-control\n      [controlConfig]=\"control\"\n      [formCtrl]=\"$any(form.get($any(control.key)))\"\n      [creation]=\"creation\"\n      (tableControlClicked)=\"onTableDisplay($event)\"\n      (childControlChanged)=\"updateChildControlValue($event, control)\"\n      (valuePreset)=\"updateControl($event)\">\n    </app-dynamic-form-control>\n  </ng-container>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CrudItemOptions } from 'app/shared/utils/crud-item-options/crud-item-options.model';\nimport { ControlValidator } from 'app/shared/utils/crud-item-options/control-options.model';\n\n@Injectable()\nexport class DynamicFormService {\n  constructor() {}\n\n  public toFormGroup(controls: CrudItemOptions[]) {\n    const group: { [key: string]: FormControl } = {};\n\n    controls.forEach(control => {\n      const value = this.getValue(control);\n      const validators = this.getValidators(control);\n      group[control.key] = new FormControl(value, validators);\n    });\n    return new FormGroup(group);\n  }\n\n  private getValue(control: CrudItemOptions): unknown {\n    let value = control.controlType === 'date' ? new Date(control.value) : control.value;\n    return value || '';\n  }\n\n  private getValidators(control: CrudItemOptions): ControlValidator[] {\n    return control.controlOptions?.validators?.length ? control.controlOptions.validators : [];\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { SnackbarService } from 'app/shared/utils/snackbar/snackbar.service';\n\n@Component({\n  selector: 'app-file-upload-input',\n  templateUrl: './file-upload-input.component.html',\n  styleUrls: ['./file-upload-input.component.scss']\n})\nexport class FileUploadInputComponent implements OnChanges {\n\n  @Input() maxFileSize: number; // Maximum file size allowed in bytes\n  @Input() accept: 'image/*' | string; // string can take a value of a file_extension or a media_type\n  @Input() displayImage: boolean;\n  @Input() imgSrc: string = '';\n  @Input() inputLabel: string = 'Upload a file';\n  @Output() fileUploaded: EventEmitter<{ data: string | ArrayBuffer; file: File }> = new EventEmitter();\n  @Output() fileDeleted: EventEmitter<{}> = new EventEmitter();\n\n  public isDraggedOver = false;\n  public importedFile: File;\n  public importedData: string | ArrayBuffer;\n  public filename = '';\n\n  constructor(\n    private readonly snackbarService: SnackbarService,\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.imgSrc && changes.imgSrc.previousValue !== changes.imgSrc.currentValue) {\n      this.filename = this.imgSrc.substring(this.imgSrc.lastIndexOf('/') + 1);\n    }\n  }\n\n  public onFileUploaded(fileInput: HTMLInputElement): void {\n    const filesList: FileList = fileInput.files;\n    if (filesList.length) {\n      this.importedFile = filesList[0];\n\n      if (this.maxFileSize && this.importedFile.size > this.maxFileSize) {\n        this.snackbarService.displayError('File too big');\n        this.importedFile = null;\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = (loadEvent) => {\n        this.importedData = loadEvent.target.result;\n        this.fileUploaded.emit({ data: this.importedData, file: this.importedFile });\n      };\n      if (this.accept === 'audio/*' || this.accept === 'video/*' || this.accept === 'image/*') {\n        reader.readAsDataURL(this.importedFile);\n      } else {\n        reader.readAsText(this.importedFile, 'utf8');\n      }\n    }\n  }\n\n  public onDrop(event: DragEvent, fileInput: HTMLInputElement): void {\n    fileInput.files = event.dataTransfer.files;\n    this.isDraggedOver = false;\n    this.onFileUploaded(fileInput);\n    this.prevent(event);\n  }\n\n  public onDragOver(event: DragEvent): void {\n    this.isDraggedOver = true;\n    this.prevent(event);    \n  }\n\n  public onDragLeave(event: DragEvent): void {\n    this.isDraggedOver = false;\n    this.prevent(event);    \n  }\n\n  public openImg(): void {\n    window.open(this.imgSrc);\n  }\n\n  public clear(fileInput: HTMLInputElement): void {\n    // this.importedFile = null;\n    // this.importedData = null;\n    // fileInput.value = null;\n    // this.filename = '';\n    this.fileDeleted.emit({});\n  }\n\n  public prevent(event: DragEvent): void {\n    event.preventDefault();\n  }\n}\n","<label for=\"file-upload\" class=\"custom-file-upload\"\n  [class.dragged-over]=\"isDraggedOver\"\n  (drop)=\"onDrop($event, fileInput)\"\n  (dragover)=\"onDragOver($event)\"\n  (dragleave)=\"onDragLeave($event)\"\n  (dragenter)=\"prevent($event)\">\n  <i class=\"pi pi-cloud-upload upload-icon\"></i>\n  <p>Drag and drop or <span class=\"link\">browse</span> your files</p>\n  <p class=\"small\">Maximum size: {{maxFileSize / 1000000}} Mb</p>\n  <p class=\"small\">Allowed extensions: {{accept}}</p>\n</label>\n\n<input #fileInput id=\"file-upload\" type=\"file\" [accept]=\"accept\" (change)=\"onFileUploaded(fileInput)\"/>\n\n<div class=\"uploaded-file-container\" *ngIf=\"displayImage && imgSrc\">\n  <img class=\"img-preview\" [src]=\"imgSrc\" alt=\"image preview\" (click)=\"openImg()\" title=\"Open in a new tab\">\n  <span>{{filename}}</span>\n  <button pButton\n    pRipple\n    icon=\"pi pi-trash\"\n    class=\"p-button-sm p-button-rounded p-button-text\"\n    (click)=\"clear(fileInput)\">\n  </button>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { TOOLTIP_CONFIG } from 'app/shared/ui/info-icon/tooltip.config';\n\n@Component({\n  selector: 'app-info-icon',\n  templateUrl: './info-icon.component.html',\n  styleUrls: ['./info-icon.component.scss']\n})\nexport class InfoIconComponent {\n  @Input() message: string;\n  @Input() position: string = TOOLTIP_CONFIG.tooltipPosition;\n  @Input() icon = 'info-circle';\n  // showDelay: number;\n  // hideDelay: number;\n\n  constructor() {}\n}\n","<i class=\"pi pi-{{icon}}\" [pTooltip]=\"message\" [tooltipPosition]=\"position\"></i>","import { TooltipOptions } from \"primeng/tooltip\";\n\nexport const TOOLTIP_CONFIG: TooltipOptions = {\n  tooltipPosition: 'top'\n};\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DEFAULT_SEARCH_PARAMS, SearchParams, Sort } from 'app/shared/ui/list/search.model';\nimport { PrimeNGConfig, SelectItem } from 'primeng/api';\nimport { DataView } from 'primeng/dataview';\nimport { debounceTime } from 'rxjs/operators';\nimport { ListService } from './list.service';\n\nexport interface ListHeaderOptionsBase {\n  search: string;\n  sort: string;\n  rangeStart: string;\n  rangeEnd: string;\n}\n\nexport interface PaginationEvent {\n  first: number;\n  rows: number;\n  sortField: string;\n  sortOrder: string;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent<T> implements OnInit {\n\n  @ViewChild(DataView) dv: DataView;\n\n  @Input() public readonly items: T[]; // Data\n  @Input() public readonly pagination: boolean = false;\n  @Input() public readonly totalRecords: number;\n  @Input() public readonly listItemTemplate!: TemplateRef<unknown>;\n  @Input() public readonly gridItemTemplate!: TemplateRef<unknown>;\n  @Input() public readonly sortOptions: SelectItem[];\n  @Input() public readonly layout: 'grid' | 'list' = 'grid';\n  @Input() public readonly enableAdd: boolean; // can add item from list\n  @Input() public readonly enableDateRange: boolean; // can filter by date range\n  @Input() private readonly listKey!: string; // for local service storage\n  @Input() public readonly sortKey!: string; // 'name', 'title'... search text param key\n  @Input() public readonly dateRangeKey: string; // 'creationTime'... used with enableDateRange\n  @Input() public readonly selectable: boolean;\n  // Search performed by backend\n  @Input() public readonly backEndSearch: boolean;\n\n  @Output() pageChanged: EventEmitter<PaginationEvent> = new EventEmitter();\n  @Output() filtered: EventEmitter<SearchParams> = new EventEmitter();\n  @Output() addClicked: EventEmitter<void> = new EventEmitter();\n  @Output() deleteClicked: EventEmitter<T[]> = new EventEmitter();\n\n  public sortField: string;\n  public sortOrder: number;\n  public searchParams: SearchParams = DEFAULT_SEARCH_PARAMS;\n  public sortCtrl: FormControl = new FormControl('');\n  public searchCtrl: FormControl = new FormControl('');\n  public dateRangeCtrl: FormControl = new FormControl([new Date(), new Date()]);\n  public selection: (T&{id})[] = [];\n\n  private firstLoad = true;\n\n  constructor(\n    private readonly primengConfig: PrimeNGConfig,\n    private readonly listService: ListService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.searchParams = this.listService.getSearchConfig(this.listKey, this.sortKey);\n\n    this.primengConfig.ripple = true;\n\n    this.searchCtrl.valueChanges.pipe(\n      debounceTime(300),\n    ).subscribe(term => {\n      this.storeSearchParams({ search: term });\n      if (this.backEndSearch) {\n        this.emitFilters();\n      } else {\n        this.dv.filter(term);\n      }\n    });\n\n    this.sortCtrl.valueChanges.pipe(\n      debounceTime(300),\n    ).subscribe(sortKey => {\n      const [order, field] = sortKey.split('-');\n      this.storeSearchParams({ sortField: field, sortOrder: order });\n      if (this.backEndSearch) {\n        this.emitFilters();\n      } else {\n        this.sortOrder = order === Sort.desc ? -1 : 1;\n        this.sortField = field;\n      }\n    });\n\n    this.dateRangeCtrl.valueChanges.pipe(\n      debounceTime(300),\n    ).subscribe((dates) => {\n      this.storeSearchParams({ from: new Date(dates[0]).getTime(), to: new Date(dates[1]).getTime() });\n      if (this.backEndSearch) {\n        this.emitFilters();\n      }\n    });\n\n    // Set values from search params\n    const sortKey = `${this.searchParams.sortOrder}-${this.searchParams.sortField}`;\n    this.sortCtrl.setValue(sortKey, { emitEvent: false });\n    this.searchCtrl.setValue(this.searchParams.search || '', { emitEvent: false });\n    const from = this.searchParams.from ? new Date(this.searchParams.from) : new Date();\n    const to = this.searchParams.to ? new Date(this.searchParams.to) : new Date();\n    this.dateRangeCtrl.setValue([from, to], { emitEvent: false });\n  }\n\n  public selectItem({ checked }, item: T&{id}) {\n    if (checked) {\n      this.selection.push(item);\n    } else {\n      this.selection = this.selection.filter(s => s.id !== item.id);\n    }\n  }\n\n  public onDeleteSelection(): void {\n    this.deleteSelection();\n  }\n\n  private deleteSelection(): void {\n    this.deleteClicked.emit(this.selection);\n  }\n\n  public onPageChange(event: PaginationEvent) {\n    if (!this.firstLoad) {\n      this.storeSearchParams({ first: event.first, rows: event.rows });\n      this.pageChanged.emit(event);\n    }\n    this.firstLoad = false;\n  }\n\n  public add(): void {\n    this.addClicked.emit();\n  }\n\n  private storeSearchParams(changes: Partial<SearchParams>): void {\n    this.searchParams = { ...this.searchParams, ...changes };\n    this.listService.storeSearchConfig(this.searchParams, this.listKey);\n  }\n\n  private emitFilters(): void {\n    this.filtered.emit(this.searchParams);\n  }\n}\n","<p-dataView #dv [value]=\"items\"\n  [paginator]=\"true\"\n  [rows]=\"searchParams.rows\"\n  [totalRecords]=\"totalRecords || items.length\"\n  [filterBy]=\"sortKey\"\n  [sortField]=\"sortField\"\n  [sortOrder]=\"sortOrder\"\n  [layout]=\"layout\"\n  [lazy]=\"backEndSearch\"\n  (onLazyLoad)=\"onPageChange($event)\"\n  [showJumpToPageDropdown]=\"false\"\n  [showCurrentPageReport]=\"true\"\n  currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n  [rowsPerPageOptions]=\"[10,25,50]\">\n  <!-- Header -->\n  <ng-template pTemplate=\"header\">\n    <div class=\"form-control-container\">\n      <p-dropdown [options]=\"sortOptions\"\n        class=\"h-45\"\n        placeholder=\"Sort By\"\n        [formControl]=\"sortCtrl\"\n        styleClass=\"p-mb-2 p-mb-md-0\">\n      </p-dropdown>\n      <span class=\"p-input-icon-left h-45 grow m-5\">\n        <i class=\"pi pi-search\"></i>\n        <input #searchInput\n          type=\"search\"\n          pInputText\n          placeholder=\"Search\"\n          [formControl]=\"searchCtrl\">\n      </span>\n      <div *ngIf=\"enableDateRange\" class=\"h-45 m-5\">\n        <p-calendar [formControl]=\"dateRangeCtrl\" selectionMode=\"range\" [readonlyInput]=\"true\" inputId=\"range\" [showButtonBar]=\"true\"></p-calendar>\n      </div>\n      <p-dataViewLayoutOptions class=\"h-45 m-5\"></p-dataViewLayoutOptions>\n      <button *ngIf=\"selectable\"\n        pButton\n        pRipple\n        icon=\"pi pi-trash\"\n        class=\"h-45 p-button-danger\"\n        (click)=\"onDeleteSelection()\"\n        [disabled]=\"!selection.length\"\n        style=\"margin: 0 5px;\">\n      </button>\n      <button *ngIf=\"enableAdd\" pButton pRipple icon=\"pi pi-plus\" class=\"h-45\" (click)=\"add()\"></button>\n    </div>\n  </ng-template>\n  <!-- List item template -->\n  <ng-template let-item let-i=\"rowIndex\" pTemplate=\"listItem\">\n    <div class=\"list-item-container\">\n      <div class=\"list-item\">\n        <ng-container *ngIf=\"selectable\">\n          <div class=\"checkbox\">\n            <p-checkbox [binary]=\"true\" (onChange)=\"selectItem($event, item)\"></p-checkbox>\n          </div>\n        </ng-container>\n        <ng-container [ngTemplateOutlet]=\"listItemTemplate\" [ngTemplateOutletContext]=\"{$implicit: item, index: i, display: 'list'}\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n  <!-- Grid item template -->\n  <ng-template let-item let-i=\"rowIndex\" pTemplate=\"gridItem\">\n    <div class=\"grid-item-container\">\n      <div class=\"grid-item\">\n        <ng-container [ngTemplateOutlet]=\"gridItemTemplate\" [ngTemplateOutletContext]=\"{$implicit: item, index: i, display: 'grid'}\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n</p-dataView>\n","import { Injectable } from '@angular/core';\nimport { DEFAULT_SEARCH_PARAMS, SearchParams } from 'app/shared/ui/list/search.model';\n\n@Injectable()\nexport class ListService {\n\n  private searchConfig: { [listKey: string]: SearchParams } = { };\n  public loadedOnce: { [listKey: string]: boolean } = { };\n\n  constructor() { }\n\n  public storeSearchConfig(searchConfig: SearchParams, listKey: string): void {\n    this.searchConfig[listKey] = searchConfig;\n    this.loadedOnce[listKey] = true;\n  }\n\n  public getSearchConfig(listKey: string, sortKey: string): SearchParams {\n    return this.searchConfig[listKey] || this.getDefaultConfig(sortKey);\n  }\n\n  public getDefaultConfig(sortKey: string): SearchParams {\n    return { ...DEFAULT_SEARCH_PARAMS, sortField: sortKey };\n  }\n}\n","export interface SearchParams {\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: string;\n    search: string;\n    from: number;\n    to: number;\n    parentId?: string;\n  }\n\n  export const DEFAULT_SEARCH_PARAMS: SearchParams = {\n    first: 0,\n    rows: 10,\n    sortField: 'title',\n    sortOrder: Sort.asc,\n    search: '',\n    from: null,\n    to: null\n  }\n\n  export const enum Sort {\n    asc = 'asc',\n    desc = 'desc'\n  }","import { TableLazyLoadEvent } from 'app/shared/ui/table/table-lazyload-event.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport class BaseTableLoader {\n\n    public loadData$: BehaviorSubject<TableLazyLoadEvent> = new BehaviorSubject(null);\n\n    constructor() { }\n\n    public loadData(event?: TableLazyLoadEvent): void {\n        if (!event) { // no payload provided\n            event = this.loadData$.value; // will emit the same value as the current one\n        }\n        this.loadData$.next(event); // triggers the reload of data table items\n    }\n\n    public handleReload(httpCall$: Observable<unknown>) {\n        // Dont need to unsubscribe as http calls through HttpClient autocompletes\n        httpCall$.subscribe(() => this.loadData());\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TableColumn } from 'app/shared/ui/table/table-column.model';\n\n@Component({\n  selector: 'app-columns-management-dialog',\n  templateUrl: './columns-management-dialog.component.html',\n  styleUrls: ['./columns-management-dialog.component.scss']\n})\nexport class ColumnsManagementDialogComponent implements OnInit {\n\n  @Input() cols: TableColumn[];\n  @Input() visible = false;\n  @Output() hide: EventEmitter<void> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onHide(): void {\n    this.hide.emit();\n  }\n\n}\n","<p-dialog [(visible)]=\"visible\"\n  [style]=\"{width: '450px'}\"\n  header=\"Manage columns\"\n  [modal]=\"true\"\n  styleClass=\"p-fluid\"\n  (onHide)=\"onHide()\">\n  <ng-template pTemplate=\"content\">\n    <p *ngFor=\"let col of cols\">\n      <p-checkbox *ngIf=\"!col.hidden\"\n        [label]=\"col.label\"\n        [(ngModel)]=\"col.isVisible\"\n        [binary]=\"true\">\n      </p-checkbox>\n    </p>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\">\n    <button pButton\n      pRipple\n      label=\"Save\"\n      icon=\"pi pi-check\"\n      class=\"p-button-success\"\n      (click)=\"onHide()\">\n    </button>\n  </ng-template>\n</p-dialog>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CrudItemOptions } from 'app/shared/utils/crud-item-options/crud-item-options.model';\n\n@Component({\n  selector: 'app-edition-dialog',\n  templateUrl: './edition-dialog.component.html',\n  styleUrls: ['./edition-dialog.component.scss']\n})\nexport class EditionDialogComponent<T> {\n\n  @Input() header: string;\n  @Input() controls: CrudItemOptions[];\n  @Input() creation: boolean;\n  @Input() editedEntry: T;\n  @Input() visible = false;\n\n  @Output() hide: EventEmitter<void> = new EventEmitter();\n  @Output() saved: EventEmitter<T> = new EventEmitter();\n\n  public invalidForm: boolean = true;\n  \n  public onFormChanged(event: { value: T; valid?: boolean }): void {\n    this.editedEntry = event.value;\n    this.invalidForm = !event.valid;\n  }\n\n  public onSave(): void {\n    this.saved.emit(this.editedEntry);\n  }\n\n  public onHide(): void {\n    this.hide.emit();\n  }\n\n}\n","<p-dialog [(visible)]=\"visible\"\n  [style]=\"{width: '450px'}\"\n  [header]=\"header\"\n  [modal]=\"true\"\n  styleClass=\"p-fluid\"\n  (onHide)=\"onHide()\">\n  <ng-template pTemplate=\"content\">\n    <app-dynamic-form\n      [controls]=\"controls\"\n      [values]=\"editedEntry\"\n      [creation]=\"creation\"\n      (formChanged)=\"onFormChanged($event)\">\n    </app-dynamic-form>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\">\n    <button pButton\n      pRipple\n      label=\"Cancel\"\n      icon=\"pi pi-times\"\n      class=\"p-button-text\"\n      (click)=\"onHide()\">\n    </button>\n    <button pButton\n      pRipple\n      label=\"Save\"\n      icon=\"pi pi-check\"\n      class=\"p-button-success\"\n      [disabled]=\"invalidForm\"\n      (click)=\"onSave()\">\n    </button>\n  </ng-template>\n</p-dialog>","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-table-actions-cell',\n  templateUrl: './table-actions-cell.component.html',\n  styleUrls: ['./table-actions-cell.component.scss']\n})\nexport class TableActionsCellComponent {\n\n  @Output() editClicked: EventEmitter<void> = new EventEmitter();\n  @Output() deleteClicked: EventEmitter<void> = new EventEmitter();\n\n  public onEdit(): void {\n    this.editClicked.emit();\n  }\n\n  public onDelete(): void {\n    this.deleteClicked.emit();\n  }\n\n}\n","<button pButton\n    pRipple\n    icon=\"pi pi-pencil\"\n    class=\"p-button-sm p-button-rounded p-button-text\"\n    pTooltip=\"Edit\"\n    (click)=\"onEdit()\">\n</button>\n<button pButton\n    pRipple icon=\"pi pi-trash\"\n    class=\"p-button-sm p-button-rounded p-button-text p-button-danger\"\n    pTooltip=\"Delete\"\n    (click)=\"onDelete()\">\n</button>","import { Component, Input, OnInit } from '@angular/core';\nimport { TableColumn } from 'app/shared/ui/table/table-column.model';\nimport { ControlType } from 'app/shared/utils/crud-item-options/control-type.model';\n\n@Component({\n  selector: 'app-table-filter-cell',\n  templateUrl: './table-filter-cell.component.html',\n  styleUrls: ['./table-filter-cell.component.scss']\n})\nexport class TableFilterCellComponent implements OnInit {\n\n  @Input() col: TableColumn;\n  public ControlType = ControlType;  \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container [ngSwitch]=\"col.controlType\">\n    <p-columnFilter\n      *ngSwitchCase=\"ControlType.INPUT\"\n      type=\"text\"\n      [field]=\"col.key\"\n      [showClearButton]=\"true\"\n      [showMenu]=\"false\"\n      data-cy=\"table-filter-input\"\n    >\n      <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n        <input\n          type=\"text\"\n          pInputText\n          (keyup)=\"filter($any($event.target).value)\"\n        />\n      </ng-template>\n    </p-columnFilter>\n    <p-columnFilter\n      *ngSwitchCase=\"ControlType.CHECKBOX\"\n      type=\"boolean\"\n      [field]=\"col.key\"\n      [showMenu]=\"false\"\n      data-cy=\"table-filter-checkbox\"\n    >\n    </p-columnFilter>\n    <p-columnFilter\n      *ngSwitchCase=\"ControlType.SELECT\"\n      [field]=\"col.key\"\n      matchMode=\"equals\"\n      [showMenu]=\"false\"\n      data-cy=\"table-filter-select\"\n    >\n      <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n        <p-dropdown\n          [ngModel]=\"value\"\n          [options]=\"col.options\"\n          (onChange)=\"filter($event.value)\"\n          placeholder=\"Any\"\n          [showClear]=\"true\"\n        >\n        </p-dropdown>\n      </ng-template>\n    </p-columnFilter>\n    <p-columnFilter\n      *ngSwitchCase=\"ControlType.MULTISELECT\"\n      [field]=\"col.key\"\n      matchMode=\"contains\"\n      [showMenu]=\"false\"\n      data-cy=\"table-filter-multi-select\"\n    >\n      <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n        <p-multiSelect\n          [ngModel]=\"value\"\n          [options]=\"col.options\"\n          (onChange)=\"filter($event.value)\"\n          placeholder=\"Any\"\n          appendTo=\"body\"\n        >\n        </p-multiSelect>\n      </ng-template>\n    </p-columnFilter>\n  </ng-container>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-table-toolbar',\n  templateUrl: './table-toolbar.component.html',\n  styleUrls: ['./table-toolbar.component.scss']\n})\nexport class TableToolbarComponent<T> {\n\n  @Input() public readonly selectable: boolean;\n  @Input() public readonly selectedEntries: (T & { id: string })[] = [];\n  @Input() public readonly allowImport: boolean;\n  @Input() public readonly allowExport: boolean;\n\n  @Output() public readonly deleteMultipleClicked: EventEmitter<void> = new EventEmitter();\n  @Output() public readonly manageColumnsClicked: EventEmitter<void> = new EventEmitter();\n  @Output() public readonly newClicked: EventEmitter<void> = new EventEmitter();\n  @Output() public readonly exportClicked: EventEmitter<void> = new EventEmitter();\n\n  constructor() { }\n\n  public onDeleteMultiple(): void {\n    this.deleteMultipleClicked.emit();\n  }\n\n  public manageColumns(): void {\n    this.manageColumnsClicked.emit();\n  }\n\n  public onNew(): void {\n    this.newClicked.emit();\n  }\n\n  public export():void{\n    this.exportClicked.emit();\n  }\n}\n","<p-toolbar>\n    <ng-template pTemplate=\"left\">\n        <button pButton pRipple\n          label=\"New\"\n          icon=\"pi pi-plus\"\n          class=\"mr-2 p-button-secondary\"\n          (click)=\"onNew()\"\n          data-cy=\"new-button\">\n        </button>\n        <button pButton pRipple\n          *ngIf=\"selectable\"\n          label=\"Delete\"\n          icon=\"pi pi-trash\"\n          class=\"p-button-danger\"\n          (click)=\"onDeleteMultiple()\"\n          [disabled]=\"!selectedEntries || !selectedEntries.length\">\n        </button>\n    </ng-template>\n  \n    <ng-template pTemplate=\"right\">\n        <p-fileUpload mode=\"basic\"\n          *ngIf=\"allowImport\"\n          accept=\"image/*\"\n          [maxFileSize]=\"1000000\"\n          label=\"Import\"\n          chooseLabel=\"Import\"\n          class=\"mr-2 inline-block\">\n        </p-fileUpload>\n        <button pButton pRipple\n          *ngIf=\"allowExport\"\n          label=\"Export\"\n          icon=\"pi pi-upload\"\n          class=\"mr-2 p-button-help\"\n          (click)=\"export()\"\n          data-cy=\"export-button\">\n        </button>\n        <button pButton pRipple\n          icon=\"pi pi-cog\"\n          (click)=\"manageColumns()\"\n          data-cy=\"params-button\">\n        </button>\n    </ng-template>\n  </p-toolbar>","import { formatDate } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { isArray } from '@dwtechs/checkhard';\nimport { CrudItemOptions } from 'app/shared/utils/crud-item-options/crud-item-options.model';\nimport { TableLazyLoadEvent } from 'app/shared/ui/table/table-lazyload-event.model';\nimport { LazyLoadEvent, SelectItem } from 'primeng/api';\nimport { Table } from 'primeng/table';\nimport { TableColumn } from './table-column.model';\nimport { ControlType } from 'app/shared/utils/crud-item-options/control-type.model';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n})\nexport class TableComponent<T> implements OnChanges {\n  @ViewChild('dataTable') dataTable: Table;\n  @Input() public readonly data: T[];\n  @Input() public readonly config: CrudItemOptions[];\n  @Input() public readonly editableRows: boolean = true;\n  @Input() public readonly deletableRows: boolean = true;\n  @Input() public readonly selectable: boolean;\n  @Input() public readonly allowAdd: boolean;\n  @Input() public readonly allowDelete: boolean;\n  @Input() public readonly allowEdit: boolean;\n  @Input() public readonly entity; // class of new entry\n  @Input() public readonly lazy: boolean = false;\n  @Input() public readonly totalRecords: number;\n  @Input() public readonly multiSelect: boolean;\n  @Output() saved: EventEmitter<T> = new EventEmitter();\n  @Output() deleted: EventEmitter<number[]> = new EventEmitter();\n  @Output() lazyLoaded: EventEmitter<TableLazyLoadEvent> = new EventEmitter();\n\n  public cols: TableColumn[];\n  public selectedEntries = [];\n  public columnsConfigDialogDisplayed = false;\n  public exportDialogDisplay = false;\n  public entryEditionDialogDisplayed = false;\n  public editedEntry: T;\n  public creation: boolean;\n  public ControlType = ControlType;\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { currentValue: config, previousValue: prevConfig } = changes.config ?? {};\n    const configChanged = JSON.stringify(config) !== JSON.stringify(prevConfig);\n    if (config && configChanged) {\n      this.cols = this.getColumns();\n    }\n    const { currentValue: data, previousValue: prevData } = changes.data ?? {};\n    if (data && prevData) {\n\n    }\n  }\n\n  public onLazyLoad(event: LazyLoadEvent) {\n    const cleanEvent: TableLazyLoadEvent = {\n      first: event.first,\n      rows: event.rows,\n      sortOrder: event.sortOrder as 1 | -1,\n      sortField: event.sortField,\n      filters: event.filters\n      // filters: event.filters ? JSON.stringify(event.filters) : '' as any\n    };\n    this.lazyLoaded.emit(cleanEvent);\n  }\n\n  public onEdit(rowData: T): void {\n    this.editedEntry = {...rowData};\n    this.creation = false;\n    this.entryEditionDialogDisplayed = true;\n  }\n\n  public onDelete(id: number): void {\n    this.deleted.emit([id]);\n  }\n\n  public onDeleteMultiple(): void {\n    const ids = this.selectedEntries.map(entry => entry.id);\n    this.deleted.emit(ids);\n  }\n\n  public manageColumns(): void {\n    this.columnsConfigDialogDisplayed = true;\n  }\n\n  public onNew(): void {\n    this.entryEditionDialogDisplayed = true;\n    this.creation = true;\n    this.editedEntry = new this.entity();\n  }\n\n  public onEditedEntrySave(editedEntry): void {\n    this.saved.emit(editedEntry);\n    this.editedEntry = null;\n    this.entryEditionDialogDisplayed = false;\n  }\n  \n  public onDeleteEntry(id: number): void{\n    this.deleted.emit([id])\n    this.entryEditionDialogDisplayed = false;\n  }\n\n  public hideDialog(): void {\n    this.columnsConfigDialogDisplayed = false;\n    this.entryEditionDialogDisplayed = false;\n    this.exportDialogDisplay = false;\n    this.editedEntry = null;\n    this.selectedEntries = [];\n  }\n\n  public export():void{\n    this.exportDialogDisplay = true;\n  }\n\n  private getColumns(): TableColumn[] {\n    return this.config.map(item => {\n      const renderedValue = (cellValue: unknown, isTooltip = false) => this.getRenderer(cellValue, item, isTooltip);\n      const columnOptions = item.columnOptions;\n      return {\n        ...item,\n        ...columnOptions,\n        key: item.key.toString(),\n        isList: item.controlType === 'table',\n        isVisible: columnOptions.default,\n        renderer: (cellValue: unknown) => renderedValue(cellValue),\n        tooltip: cellValue => columnOptions.tooltip ? columnOptions.tooltip(cellValue) : renderedValue(cellValue, true),\n        filterable: columnOptions.filterable !== false,\n        sortable: columnOptions.sortable !== false,\n      }\n    });\n  }\n\n  private getRenderer(cellValue: unknown, control: CrudItemOptions, isTooltip: boolean): string {\n    if (control.columnOptions.customCellRenderer) {\n      return control.columnOptions.customCellRenderer(cellValue);\n    }\n    switch (control.controlType) {\n      case ControlType.TABLE: {\n        return this.tableCellRenderer(cellValue);\n      }\n      case ControlType.SELECT: {        \n        return this.selectCellRenderer(cellValue, control);\n      }\n      case ControlType.MULTISELECT: {\n        return this.multiselectCellRenderer(cellValue, control, isTooltip);\n      }\n      case ControlType.DATE: {\n        return formatDate(cellValue as number, 'yyyy-MM-dd', 'en');\n      }\n      case ControlType.CHECKBOX: {\n        return this.checkboxCellRenderer(cellValue, isTooltip);\n      }\n      default: {\n        return `${cellValue}`;\n      }\n    }\n  }\n\n  private tableCellRenderer(cellValue: unknown): string {\n    return this.isCellArray(cellValue) ? cellValue.length.toString() : '';\n  }\n  \n  private selectCellRenderer(cellValue: unknown, column: CrudItemOptions): string {\n    const option = this.getOption(column, cellValue);\n    if (!option) return '';\n    return option.label;\n  }\n\n  private multiselectCellRenderer(cellValue: unknown, column: CrudItemOptions, tooltip: boolean): string {\n    if (this.isCellArray(cellValue)) {\n      const separator = tooltip ? ', ': '';\n      let values = cellValue.map(val => this.getOption(column, val)).filter(val => !!val);\n      return values.map(val => {\n        if (val.styleClass && !tooltip) {\n          return `<i class=\"${val.styleClass}\">${val.label}</i>`;\n        }\n        return val.label;\n      }).join(separator);\n    }\n    return '';\n  }\n\n  private checkboxCellRenderer(cellValue: unknown, tooltip: boolean): string {\n    if (tooltip) {\n      return cellValue ? 'Yes' : 'No';\n    }\n    return cellValue ? '<i class=\"pi pi-check green\"></i>' : '<i class=\"pi pi-times indigo\"></i>';\n  }\n\n  private isCellArray(cellValue: unknown): cellValue is unknown[] {\n    return cellValue && isArray(cellValue);\n  }\n\n  private getOption(column: CrudItemOptions, cellValue: unknown): SelectItem {\n    return column.options.find(opt => opt.value === cellValue)\n  }\n\n}\n","<app-table-toolbar\n  [allowExport]=\"false\"\n  [allowImport]=\"false\"\n  [selectedEntries]=\"selectedEntries\"\n  [selectable]=\"selectable\"\n  (deleteMultipleClicked)=\"onDeleteMultiple()\"\n  (newClicked)=\"onNew()\"\n  (manageColumnsClicked)=\"manageColumns()\">\n</app-table-toolbar>\n \n<p-table #dataTable [columns]=\"cols\"\n  [value]=\"data\"\n  class=\"table\"\n  *ngIf=\"data && data.length || !data?.length && lazy\"\n  styleClass=\"p-datatable-striped p-datatable-gridlines\"\n  [rowHover]=\"true\"\n  [rows]=\"10\"\n  [showCurrentPageReport]=\"true\"\n  [rowsPerPageOptions]=\"[10,25,50]\"\n  [paginator]=\"true\"\n  currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n  [(selection)]=\"selectedEntries\"\n  [lazy]=\"lazy\"\n  [totalRecords]=\"totalRecords\"\n  (onLazyLoad)=\"onLazyLoad($event)\"\n  data-cy=\"table\">\n  <ng-template pTemplate=\"header\" let-columns>\n    <tr>\n      <th style=\"width: 3rem\" *ngIf=\"selectable\">\n        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n      </th>\n      <ng-container *ngFor=\"let col of columns\">\n        <th *ngIf=\"col.isVisible && !col.hidden\"\n          [pSortableColumn]=\"col.key\"\n          [title]=\"col.label\"\n          [ngClass]=\"col.minScreenSize + '-display-only'\"\n          [class.force-visible]=\"col.default\"\n          scope=\"th\"\n          data-cy=\"table-header\">\n          <div class=\"header-container\">\n            <div class=\"sub-container\">\n              <span>{{ col.label }}</span>\n              <p-sortIcon *ngIf=\"col.sortable\" [field]=\"col.key\"></p-sortIcon>\n            </div>\n          </div>\n        </th>\n      </ng-container>\n      <th scope=\"th\">Actions</th>\n    </tr>\n    <tr>\n      <th *ngIf=\"selectable\"></th>\n      <ng-container *ngFor=\"let col of columns\">\n        <th *ngIf=\"col.filterable && col.isVisible && !col.hidden\"\n          class=\"filter-row-th\"\n          [ngClass]=\"col.minScreenSize + '-display-only'\"\n          [class.force-visible]=\"col.isVisible\"\n          scope=\"th\"\n          data-cy=\"table-filter\">\n            <app-table-filter-cell [col]=\"col\"></app-table-filter-cell>\n        </th>\n      </ng-container>\n      <th></th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\" let-columns=\"columns\">\n    <tr>\n      <td *ngIf=\"selectable\">\n        <p-tableCheckbox [value]=\"rowData\"></p-tableCheckbox>\n      </td>\n      <ng-container *ngFor=\"let col of columns\">\n        <td *ngIf=\"col.isVisible && !col.hidden\"\n          [title]=\"col.tooltip(rowData[col.key])\"\n          [ngClass]=\"col.minScreenSize + '-display-only'\"\n          [class.force-visible]=\"col.isVisible\">\n          <span [innerHtml]=\"col.renderer(rowData[col.key])\"></span>\n        </td>\n      </ng-container>\n      <td>\n        <app-table-actions-cell\n          (editClicked)=\"onEdit(rowData)\"\n          (deleteClicked)=\"onDelete(rowData.id)\">\n        </app-table-actions-cell>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<app-columns-management-dialog *ngIf=\"columnsConfigDialogDisplayed\"\n  [visible]=\"columnsConfigDialogDisplayed\"\n  [cols]=\"cols\"\n  (hide)=\"hideDialog()\">\n</app-columns-management-dialog>\n\n<app-edition-dialog *ngIf=\"entryEditionDialogDisplayed\"\n  [visible]=\"entryEditionDialogDisplayed\"\n  [header]=\"entity.name + ' Details'\"\n  [controls]=\"config\"\n  [editedEntry]=\"editedEntry\"\n  [creation]=\"creation\"\n  (hide)=\"hideDialog()\"\n  (saved)=\"onEditedEntrySave($event)\">\n</app-edition-dialog>\n","export enum ControlType {\n  AUTOCOMPLETE = 'autocomplete',\n  CHECKBOX = 'checkbox',\n  DATE = 'date',\n  INPUT = 'input',\n  LIST = 'list',\n  MULTISELECT = 'multiselect',\n  SELECT = 'select',\n  TABLE = 'table'\n}","export enum ScreenWidth {\n  small = 'small', //768,\n  medium = 'medium', //1024,\n  large = 'large' //1280\n}","export enum TypeInput {\n  TEXT = 'text',\n  NUMBER = 'number'\n}","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MessageService } from \"primeng/api\";\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { BadgeModule } from \"primeng/badge\";\nimport { BreadcrumbModule } from \"primeng/breadcrumb\";\nimport { ButtonModule } from \"primeng/button\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { CardModule } from \"primeng/card\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { ChipModule } from \"primeng/chip\";\nimport { ChipsModule } from 'primeng/chips';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DataViewModule } from \"primeng/dataview\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { DialogService, DynamicDialogModule } from \"primeng/dynamicdialog\";\nimport { FileUploadModule } from \"primeng/fileupload\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { InputSwitchModule } from \"primeng/inputswitch\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { ListboxModule } from \"primeng/listbox\";\nimport { MenuModule } from \"primeng/menu\";\nimport { MessageModule } from \"primeng/message\";\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { OverlayPanelModule } from \"primeng/overlaypanel\";\nimport { PaginatorModule } from \"primeng/paginator\";\nimport { ProgressBarModule } from \"primeng/progressbar\";\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RatingModule } from \"primeng/rating\";\nimport { SidebarModule } from 'primeng/sidebar';\nimport { StepsModule } from \"primeng/steps\";\nimport { TableModule } from \"primeng/table\";\nimport { TabMenuModule } from \"primeng/tabmenu\";\nimport { TabViewModule } from \"primeng/tabview\";\nimport { ToastModule } from 'primeng/toast';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { TooltipModule } from \"primeng/tooltip\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TableModule,\n    PaginatorModule,\n    ButtonModule,\n    DialogModule,\n    InputTextModule,\n    ListboxModule,\n    FileUploadModule,\n    CheckboxModule,\n    BreadcrumbModule,\n    InputNumberModule,\n    CalendarModule,\n    DataViewModule,\n    RatingModule,\n    ChipsModule,\n    ChipModule,\n    InputSwitchModule,\n    InputTextareaModule,\n    DynamicDialogModule,\n    StepsModule,\n    CardModule,\n    AutoCompleteModule,\n    TabMenuModule,\n    TabViewModule,\n    BadgeModule,\n    MenuModule,\n    OverlayPanelModule,\n    ProgressBarModule,\n    MessageModule,\n    TooltipModule,\n    ToolbarModule,\n    MultiSelectModule,\n    ConfirmDialogModule,\n    ToastModule,\n    SidebarModule,\n    ColorPickerModule,\n    ProgressSpinnerModule\n  ],\n  exports: [\n    TableModule,\n    PaginatorModule,\n    ButtonModule,\n    DialogModule,\n    InputTextModule,\n    ListboxModule,\n    FileUploadModule,\n    CheckboxModule,\n    BreadcrumbModule,\n    InputNumberModule,\n    CalendarModule,\n    DataViewModule,\n    RatingModule,\n    ChipsModule,\n    ChipModule,\n    InputSwitchModule,\n    InputTextareaModule,\n    DynamicDialogModule,\n    StepsModule,\n    CardModule,\n    AutoCompleteModule,\n    TabMenuModule,\n    TabViewModule,\n    BadgeModule,\n    MenuModule,\n    OverlayPanelModule,\n    ProgressBarModule,\n    MessageModule,\n    TooltipModule,\n    ToolbarModule,\n    MultiSelectModule,\n    ConfirmDialogModule,\n    ToastModule,\n    SidebarModule,\n    ColorPickerModule,\n    ProgressSpinnerModule\n  ],\n  providers: [\n    DialogService,\n    MessageService\n  ],\n})\nexport class PrimeNGModule { }\n","import { TitleCasePipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Message, MessageService } from 'primeng/api';\n\n@Injectable({ providedIn: 'root' })\nexport class SnackbarService {\n\n  constructor(\n    private readonly messageService: MessageService\n  ) { }\n  \n  public displayError(message = 'An error occured') {\n    this.show({\n      severity: 'error',\n      detail: message\n    });\n  }\n\n  public displaySuccess() {\n    this.show({\n      key: 'topRight',\n      severity: 'success',\n      closable: false\n    });\n  }\n\n  public displayInfo(message: string) {\n    this.show({\n      detail: message\n    });\n  }\n\n  private show(messageConfig: Message): void {\n    if (!messageConfig.key) {\n      if (!messageConfig.severity) {\n        messageConfig.severity = 'info';\n      }\n      if (!messageConfig.summary) {\n        messageConfig.summary = TitleCasePipe.prototype.transform(messageConfig.severity);\n      }\n    }\n    this.messageService.add(messageConfig);\n  }\n}\n","export const FORM_ERROR_MESSAGES = {\n    required: 'Required',\n    unknownValue: 'Please select a suggested value',\n    emailInvalid: 'Email not valid',\n    '*': 'Invalid'\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}